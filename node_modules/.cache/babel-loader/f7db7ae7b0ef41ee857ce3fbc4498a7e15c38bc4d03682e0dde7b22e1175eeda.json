{"ast":null,"code":"var _jsxFileName = \"C:\\\\EVITRA25\\\\Evitra_project\\\\evitra\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const isEmailValid = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const isPasswordValid = password => {\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let isValid = true;\n\n    // Validar el campo de correo electrónico\n    if (!email || !isEmailValid(email)) {\n      setEmailError('Por favor, introduzca un correo electrónico válido.');\n      isValid = false;\n    } else {\n      setEmailError('');\n    }\n\n    // Validar el campo de contraseña\n    if (!password || !isPasswordValid(password)) {\n      setPasswordError('La contraseña debe tener al menos 8 caracteres, una letra, un número y un carácter especial.');\n      if (!password) {\n        setPasswordError('Por favor, introduzca una contraseña.');\n      }\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n    if (isValid) {\n      onLoginSuccess('menu');\n    }\n  };\n  /*\r\n    return (\r\n      <body class=\"bg-login\">\r\n      <div class=\"container\">\r\n        <form>\r\n          <div class=\"formlg\">\r\n            <div>\r\n              <label class=\"item1\" htmlFor=\"email\">\r\n                Usuario\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                class=\"item2\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Correo Electrónico\"\r\n                required\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {emailError && <p class=\"error-form\">{emailError}</p>}\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"formlg\">\r\n            <div>\r\n              <label class=\"item1\" htmlFor=\"password\">\r\n                Contraseña\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                class=\"item2\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                required\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {passwordError && <p class=\"error-form\">{passwordError}</p>}\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"btn-ingresar\">\r\n            <button type=\"button\" class=\"btn\" onClick={handleSubmit}>\r\n              Ingresar\r\n            </button>\r\n          </div>\r\n  \r\n          <div class=\"btn-ingresar\">\r\n            <button type=\"button\" class=\"btn\">\r\n              Crear cuenta\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      </body>\r\n  \r\n    );*/\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    class: \"bg-login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Usuario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Correo Electr\\xF3nico\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"error-form\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"********\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"error-form\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Ingresar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Crear cuenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"mYnrU+xg+8tewUeZClc7aescQ+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","isEmailValid","emailRegex","test","isPasswordValid","passwordRegex","handleSubmit","e","preventDefault","isValid","class","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/EVITRA25/Evitra_project/evitra/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const isPasswordValid = (password) => {\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isValid = true;\r\n\r\n    // Validar el campo de correo electrónico\r\n    if (!email || !isEmailValid(email)) {\r\n      setEmailError('Por favor, introduzca un correo electrónico válido.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n\r\n     // Validar el campo de contraseña\r\n     if (!password || !isPasswordValid(password)) {\r\n        setPasswordError('La contraseña debe tener al menos 8 caracteres, una letra, un número y un carácter especial.');\r\n\r\n        if (!password) {\r\n          setPasswordError('Por favor, introduzca una contraseña.');\r\n        } \r\n\r\n        isValid = false;\r\n\r\n      } else {\r\n        setPasswordError('');\r\n      }\r\n\r\n     \r\n    if (isValid) {\r\n      onLoginSuccess('menu');\r\n    }\r\n  };\r\n/*\r\n  return (\r\n    <body class=\"bg-login\">\r\n    <div class=\"container\">\r\n      <form>\r\n        <div class=\"formlg\">\r\n          <div>\r\n            <label class=\"item1\" htmlFor=\"email\">\r\n              Usuario\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              class=\"item2\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Correo Electrónico\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            {emailError && <p class=\"error-form\">{emailError}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"formlg\">\r\n          <div>\r\n            <label class=\"item1\" htmlFor=\"password\">\r\n              Contraseña\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              class=\"item2\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Contraseña\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {passwordError && <p class=\"error-form\">{passwordError}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"btn-ingresar\">\r\n          <button type=\"button\" class=\"btn\" onClick={handleSubmit}>\r\n            Ingresar\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"btn-ingresar\">\r\n          <button type=\"button\" class=\"btn\">\r\n            Crear cuenta\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </body>\r\n\r\n  );*/\r\n\r\n  return(\r\n    <body class=\"bg-login\">\r\n    <div class=\"container\">\r\n    <form onSubmit={handleSubmit}>\r\n        <div class=\"form-group\">\r\n        <label htmlFor=\"email\">Usuario:</label>\r\n        <input type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Correo Electrónico\"\r\n              \r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}/>\r\n        </div>\r\n        {emailError && <p class=\"error-form\">{emailError}</p>}\r\n\r\n        <div class=\"form-group\">\r\n        <label htmlFor=\"password\">Contraseña:</label>\r\n        <input type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"********\"\r\n              \r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}/>\r\n\r\n        </div>\r\n        {passwordError && <p class=\"error-form\">{passwordError}</p>}\r\n\r\n        <div class=\"button-group\">\r\n        <button type=\"submit\">Ingresar</button>\r\n        </div>\r\n        <button type=\"button\">Crear cuenta</button>\r\n\r\n    </form>\r\n    </div>\r\n</body>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}